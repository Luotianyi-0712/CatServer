// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChessRogueFinishInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChessRogueFinishInfo.proto</summary>
  public static partial class ChessRogueFinishInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ChessRogueFinishInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChessRogueFinishInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpDaGVzc1JvZ3VlRmluaXNoSW5mby5wcm90bxoZQ2hlc3NSb2d1ZVN0b3J5",
            "SW5mby5wcm90bxoOSXRlbUxpc3QucHJvdG8aFENoZXNzUm9ndWVCdWZmLnBy",
            "b3RvGhdDaGVzc1JvZ3VlTWlyYWNsZS5wcm90bxoaQ2hlc3NSb2d1ZUZpbmlz",
            "aFR5cGUucHJvdG8aEExpbmV1cEluZm8ucHJvdG8iqwQKFENoZXNzUm9ndWVG",
            "aW5pc2hJbmZvEhEKCWlzX2ZpbmlzaBgMIAEoCBIQCgdhcmVhX2lkGJQOIAEo",
            "DRITCgtKUEpQRENMUEdLTxgIIAEoDRIqCgtmaW5pc2hfdHlwZRgHIAEoDjIV",
            "LkNoZXNzUm9ndWVGaW5pc2hUeXBlEhUKDW1haW5fc3RvcnlfaWQYCSABKA0S",
            "KQoKc3RvcnlfaW5mbxjjCiABKAsyFC5DaGVzc1JvZ3VlU3RvcnlJbmZvEhsK",
            "E2ZpbmlzaGVkX3Jvb21fY291bnQYAiABKA0SLQoRZ2FtZV9taXJhY2xlX2lu",
            "Zm8YDSABKAsyEi5DaGVzc1JvZ3VlTWlyYWNsZRIoCg9yb2d1ZV9idWZmX2lu",
            "Zm8YDiABKAsyDy5DaGVzc1JvZ3VlQnVmZhITCgtESFBFSUpPS09EQxgBIAMo",
            "DRIZChByb2d1ZV92ZXJzaW9uX2lkGMsOIAEoDRIUCgxjdXJfbGF5ZXJfaWQY",
            "CyABKA0SHwoKY3VyX2xpbmV1cBgPIAEoCzILLkxpbmV1cEluZm8SGgoScmVh",
            "Y2hlZF9yb29tX2NvdW50GAYgASgNEhQKC0ZOSkJHQktPREZNGMcOIAEoDRIT",
            "CgtPQ0dJQU1NTk9JRBgDIAEoDRIRCghzY29yZV9pZBiOCyABKA0SFAoLSklE",
            "R0hPTUVNQkMY3Q0gASgNEh4KC1BDREtIQkRQREFJGAUgASgLMgkuSXRlbUxp",
            "c3RCHqoCG0VnZ0xpbmsuRGFuaGVuZ1NlcnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ChessRogueStoryInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ItemListReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueBuffReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueMiracleReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueFinishTypeReflection.Descriptor, global::EggLink.DanhengServer.Proto.LineupInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChessRogueFinishInfo), global::EggLink.DanhengServer.Proto.ChessRogueFinishInfo.Parser, new[]{ "IsFinish", "AreaId", "JPJPDCLPGKO", "FinishType", "MainStoryId", "StoryInfo", "FinishedRoomCount", "GameMiracleInfo", "RogueBuffInfo", "DHPEIJOKODC", "RogueVersionId", "CurLayerId", "CurLineup", "ReachedRoomCount", "FNJBGBKODFM", "OCGIAMMNOID", "ScoreId", "JIDGHOMEMBC", "PCDKHBDPDAI" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChessRogueFinishInfo : pb::IMessage<ChessRogueFinishInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChessRogueFinishInfo> _parser = new pb::MessageParser<ChessRogueFinishInfo>(() => new ChessRogueFinishInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChessRogueFinishInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChessRogueFinishInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo(ChessRogueFinishInfo other) : this() {
      isFinish_ = other.isFinish_;
      areaId_ = other.areaId_;
      jPJPDCLPGKO_ = other.jPJPDCLPGKO_;
      finishType_ = other.finishType_;
      mainStoryId_ = other.mainStoryId_;
      storyInfo_ = other.storyInfo_ != null ? other.storyInfo_.Clone() : null;
      finishedRoomCount_ = other.finishedRoomCount_;
      gameMiracleInfo_ = other.gameMiracleInfo_ != null ? other.gameMiracleInfo_.Clone() : null;
      rogueBuffInfo_ = other.rogueBuffInfo_ != null ? other.rogueBuffInfo_.Clone() : null;
      dHPEIJOKODC_ = other.dHPEIJOKODC_.Clone();
      rogueVersionId_ = other.rogueVersionId_;
      curLayerId_ = other.curLayerId_;
      curLineup_ = other.curLineup_ != null ? other.curLineup_.Clone() : null;
      reachedRoomCount_ = other.reachedRoomCount_;
      fNJBGBKODFM_ = other.fNJBGBKODFM_;
      oCGIAMMNOID_ = other.oCGIAMMNOID_;
      scoreId_ = other.scoreId_;
      jIDGHOMEMBC_ = other.jIDGHOMEMBC_;
      pCDKHBDPDAI_ = other.pCDKHBDPDAI_ != null ? other.pCDKHBDPDAI_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo Clone() {
      return new ChessRogueFinishInfo(this);
    }

    /// <summary>Field number for the "is_finish" field.</summary>
    public const int IsFinishFieldNumber = 12;
    private bool isFinish_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFinish {
      get { return isFinish_; }
      set {
        isFinish_ = value;
      }
    }

    /// <summary>Field number for the "area_id" field.</summary>
    public const int AreaIdFieldNumber = 1812;
    private uint areaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AreaId {
      get { return areaId_; }
      set {
        areaId_ = value;
      }
    }

    /// <summary>Field number for the "JPJPDCLPGKO" field.</summary>
    public const int JPJPDCLPGKOFieldNumber = 8;
    private uint jPJPDCLPGKO_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint JPJPDCLPGKO {
      get { return jPJPDCLPGKO_; }
      set {
        jPJPDCLPGKO_ = value;
      }
    }

    /// <summary>Field number for the "finish_type" field.</summary>
    public const int FinishTypeFieldNumber = 7;
    private global::EggLink.DanhengServer.Proto.ChessRogueFinishType finishType_ = global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueFinishType FinishType {
      get { return finishType_; }
      set {
        finishType_ = value;
      }
    }

    /// <summary>Field number for the "main_story_id" field.</summary>
    public const int MainStoryIdFieldNumber = 9;
    private uint mainStoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MainStoryId {
      get { return mainStoryId_; }
      set {
        mainStoryId_ = value;
      }
    }

    /// <summary>Field number for the "story_info" field.</summary>
    public const int StoryInfoFieldNumber = 1379;
    private global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo storyInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo StoryInfo {
      get { return storyInfo_; }
      set {
        storyInfo_ = value;
      }
    }

    /// <summary>Field number for the "finished_room_count" field.</summary>
    public const int FinishedRoomCountFieldNumber = 2;
    private uint finishedRoomCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FinishedRoomCount {
      get { return finishedRoomCount_; }
      set {
        finishedRoomCount_ = value;
      }
    }

    /// <summary>Field number for the "game_miracle_info" field.</summary>
    public const int GameMiracleInfoFieldNumber = 13;
    private global::EggLink.DanhengServer.Proto.ChessRogueMiracle gameMiracleInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueMiracle GameMiracleInfo {
      get { return gameMiracleInfo_; }
      set {
        gameMiracleInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_buff_info" field.</summary>
    public const int RogueBuffInfoFieldNumber = 14;
    private global::EggLink.DanhengServer.Proto.ChessRogueBuff rogueBuffInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueBuff RogueBuffInfo {
      get { return rogueBuffInfo_; }
      set {
        rogueBuffInfo_ = value;
      }
    }

    /// <summary>Field number for the "DHPEIJOKODC" field.</summary>
    public const int DHPEIJOKODCFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_dHPEIJOKODC_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> dHPEIJOKODC_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> DHPEIJOKODC {
      get { return dHPEIJOKODC_; }
    }

    /// <summary>Field number for the "rogue_version_id" field.</summary>
    public const int RogueVersionIdFieldNumber = 1867;
    private uint rogueVersionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RogueVersionId {
      get { return rogueVersionId_; }
      set {
        rogueVersionId_ = value;
      }
    }

    /// <summary>Field number for the "cur_layer_id" field.</summary>
    public const int CurLayerIdFieldNumber = 11;
    private uint curLayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurLayerId {
      get { return curLayerId_; }
      set {
        curLayerId_ = value;
      }
    }

    /// <summary>Field number for the "cur_lineup" field.</summary>
    public const int CurLineupFieldNumber = 15;
    private global::EggLink.DanhengServer.Proto.LineupInfo curLineup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.LineupInfo CurLineup {
      get { return curLineup_; }
      set {
        curLineup_ = value;
      }
    }

    /// <summary>Field number for the "reached_room_count" field.</summary>
    public const int ReachedRoomCountFieldNumber = 6;
    private uint reachedRoomCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReachedRoomCount {
      get { return reachedRoomCount_; }
      set {
        reachedRoomCount_ = value;
      }
    }

    /// <summary>Field number for the "FNJBGBKODFM" field.</summary>
    public const int FNJBGBKODFMFieldNumber = 1863;
    private uint fNJBGBKODFM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FNJBGBKODFM {
      get { return fNJBGBKODFM_; }
      set {
        fNJBGBKODFM_ = value;
      }
    }

    /// <summary>Field number for the "OCGIAMMNOID" field.</summary>
    public const int OCGIAMMNOIDFieldNumber = 3;
    private uint oCGIAMMNOID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OCGIAMMNOID {
      get { return oCGIAMMNOID_; }
      set {
        oCGIAMMNOID_ = value;
      }
    }

    /// <summary>Field number for the "score_id" field.</summary>
    public const int ScoreIdFieldNumber = 1422;
    private uint scoreId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScoreId {
      get { return scoreId_; }
      set {
        scoreId_ = value;
      }
    }

    /// <summary>Field number for the "JIDGHOMEMBC" field.</summary>
    public const int JIDGHOMEMBCFieldNumber = 1757;
    private uint jIDGHOMEMBC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint JIDGHOMEMBC {
      get { return jIDGHOMEMBC_; }
      set {
        jIDGHOMEMBC_ = value;
      }
    }

    /// <summary>Field number for the "PCDKHBDPDAI" field.</summary>
    public const int PCDKHBDPDAIFieldNumber = 5;
    private global::EggLink.DanhengServer.Proto.ItemList pCDKHBDPDAI_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ItemList PCDKHBDPDAI {
      get { return pCDKHBDPDAI_; }
      set {
        pCDKHBDPDAI_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChessRogueFinishInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChessRogueFinishInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsFinish != other.IsFinish) return false;
      if (AreaId != other.AreaId) return false;
      if (JPJPDCLPGKO != other.JPJPDCLPGKO) return false;
      if (FinishType != other.FinishType) return false;
      if (MainStoryId != other.MainStoryId) return false;
      if (!object.Equals(StoryInfo, other.StoryInfo)) return false;
      if (FinishedRoomCount != other.FinishedRoomCount) return false;
      if (!object.Equals(GameMiracleInfo, other.GameMiracleInfo)) return false;
      if (!object.Equals(RogueBuffInfo, other.RogueBuffInfo)) return false;
      if(!dHPEIJOKODC_.Equals(other.dHPEIJOKODC_)) return false;
      if (RogueVersionId != other.RogueVersionId) return false;
      if (CurLayerId != other.CurLayerId) return false;
      if (!object.Equals(CurLineup, other.CurLineup)) return false;
      if (ReachedRoomCount != other.ReachedRoomCount) return false;
      if (FNJBGBKODFM != other.FNJBGBKODFM) return false;
      if (OCGIAMMNOID != other.OCGIAMMNOID) return false;
      if (ScoreId != other.ScoreId) return false;
      if (JIDGHOMEMBC != other.JIDGHOMEMBC) return false;
      if (!object.Equals(PCDKHBDPDAI, other.PCDKHBDPDAI)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsFinish != false) hash ^= IsFinish.GetHashCode();
      if (AreaId != 0) hash ^= AreaId.GetHashCode();
      if (JPJPDCLPGKO != 0) hash ^= JPJPDCLPGKO.GetHashCode();
      if (FinishType != global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone) hash ^= FinishType.GetHashCode();
      if (MainStoryId != 0) hash ^= MainStoryId.GetHashCode();
      if (storyInfo_ != null) hash ^= StoryInfo.GetHashCode();
      if (FinishedRoomCount != 0) hash ^= FinishedRoomCount.GetHashCode();
      if (gameMiracleInfo_ != null) hash ^= GameMiracleInfo.GetHashCode();
      if (rogueBuffInfo_ != null) hash ^= RogueBuffInfo.GetHashCode();
      hash ^= dHPEIJOKODC_.GetHashCode();
      if (RogueVersionId != 0) hash ^= RogueVersionId.GetHashCode();
      if (CurLayerId != 0) hash ^= CurLayerId.GetHashCode();
      if (curLineup_ != null) hash ^= CurLineup.GetHashCode();
      if (ReachedRoomCount != 0) hash ^= ReachedRoomCount.GetHashCode();
      if (FNJBGBKODFM != 0) hash ^= FNJBGBKODFM.GetHashCode();
      if (OCGIAMMNOID != 0) hash ^= OCGIAMMNOID.GetHashCode();
      if (ScoreId != 0) hash ^= ScoreId.GetHashCode();
      if (JIDGHOMEMBC != 0) hash ^= JIDGHOMEMBC.GetHashCode();
      if (pCDKHBDPDAI_ != null) hash ^= PCDKHBDPDAI.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dHPEIJOKODC_.WriteTo(output, _repeated_dHPEIJOKODC_codec);
      if (FinishedRoomCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FinishedRoomCount);
      }
      if (OCGIAMMNOID != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(OCGIAMMNOID);
      }
      if (pCDKHBDPDAI_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PCDKHBDPDAI);
      }
      if (ReachedRoomCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ReachedRoomCount);
      }
      if (FinishType != global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone) {
        output.WriteRawTag(56);
        output.WriteEnum((int) FinishType);
      }
      if (JPJPDCLPGKO != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(JPJPDCLPGKO);
      }
      if (MainStoryId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MainStoryId);
      }
      if (CurLayerId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(CurLayerId);
      }
      if (IsFinish != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsFinish);
      }
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(GameMiracleInfo);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(RogueBuffInfo);
      }
      if (curLineup_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(CurLineup);
      }
      if (storyInfo_ != null) {
        output.WriteRawTag(154, 86);
        output.WriteMessage(StoryInfo);
      }
      if (ScoreId != 0) {
        output.WriteRawTag(240, 88);
        output.WriteUInt32(ScoreId);
      }
      if (JIDGHOMEMBC != 0) {
        output.WriteRawTag(232, 109);
        output.WriteUInt32(JIDGHOMEMBC);
      }
      if (AreaId != 0) {
        output.WriteRawTag(160, 113);
        output.WriteUInt32(AreaId);
      }
      if (FNJBGBKODFM != 0) {
        output.WriteRawTag(184, 116);
        output.WriteUInt32(FNJBGBKODFM);
      }
      if (RogueVersionId != 0) {
        output.WriteRawTag(216, 116);
        output.WriteUInt32(RogueVersionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dHPEIJOKODC_.WriteTo(ref output, _repeated_dHPEIJOKODC_codec);
      if (FinishedRoomCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FinishedRoomCount);
      }
      if (OCGIAMMNOID != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(OCGIAMMNOID);
      }
      if (pCDKHBDPDAI_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PCDKHBDPDAI);
      }
      if (ReachedRoomCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ReachedRoomCount);
      }
      if (FinishType != global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone) {
        output.WriteRawTag(56);
        output.WriteEnum((int) FinishType);
      }
      if (JPJPDCLPGKO != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(JPJPDCLPGKO);
      }
      if (MainStoryId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MainStoryId);
      }
      if (CurLayerId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(CurLayerId);
      }
      if (IsFinish != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsFinish);
      }
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(GameMiracleInfo);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(RogueBuffInfo);
      }
      if (curLineup_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(CurLineup);
      }
      if (storyInfo_ != null) {
        output.WriteRawTag(154, 86);
        output.WriteMessage(StoryInfo);
      }
      if (ScoreId != 0) {
        output.WriteRawTag(240, 88);
        output.WriteUInt32(ScoreId);
      }
      if (JIDGHOMEMBC != 0) {
        output.WriteRawTag(232, 109);
        output.WriteUInt32(JIDGHOMEMBC);
      }
      if (AreaId != 0) {
        output.WriteRawTag(160, 113);
        output.WriteUInt32(AreaId);
      }
      if (FNJBGBKODFM != 0) {
        output.WriteRawTag(184, 116);
        output.WriteUInt32(FNJBGBKODFM);
      }
      if (RogueVersionId != 0) {
        output.WriteRawTag(216, 116);
        output.WriteUInt32(RogueVersionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsFinish != false) {
        size += 1 + 1;
      }
      if (AreaId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AreaId);
      }
      if (JPJPDCLPGKO != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(JPJPDCLPGKO);
      }
      if (FinishType != global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FinishType);
      }
      if (MainStoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MainStoryId);
      }
      if (storyInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StoryInfo);
      }
      if (FinishedRoomCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FinishedRoomCount);
      }
      if (gameMiracleInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameMiracleInfo);
      }
      if (rogueBuffInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueBuffInfo);
      }
      size += dHPEIJOKODC_.CalculateSize(_repeated_dHPEIJOKODC_codec);
      if (RogueVersionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RogueVersionId);
      }
      if (CurLayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurLayerId);
      }
      if (curLineup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurLineup);
      }
      if (ReachedRoomCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReachedRoomCount);
      }
      if (FNJBGBKODFM != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FNJBGBKODFM);
      }
      if (OCGIAMMNOID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OCGIAMMNOID);
      }
      if (ScoreId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScoreId);
      }
      if (JIDGHOMEMBC != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(JIDGHOMEMBC);
      }
      if (pCDKHBDPDAI_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PCDKHBDPDAI);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChessRogueFinishInfo other) {
      if (other == null) {
        return;
      }
      if (other.IsFinish != false) {
        IsFinish = other.IsFinish;
      }
      if (other.AreaId != 0) {
        AreaId = other.AreaId;
      }
      if (other.JPJPDCLPGKO != 0) {
        JPJPDCLPGKO = other.JPJPDCLPGKO;
      }
      if (other.FinishType != global::EggLink.DanhengServer.Proto.ChessRogueFinishType.ChessRogueAccountByNone) {
        FinishType = other.FinishType;
      }
      if (other.MainStoryId != 0) {
        MainStoryId = other.MainStoryId;
      }
      if (other.storyInfo_ != null) {
        if (storyInfo_ == null) {
          StoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo();
        }
        StoryInfo.MergeFrom(other.StoryInfo);
      }
      if (other.FinishedRoomCount != 0) {
        FinishedRoomCount = other.FinishedRoomCount;
      }
      if (other.gameMiracleInfo_ != null) {
        if (gameMiracleInfo_ == null) {
          GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
        }
        GameMiracleInfo.MergeFrom(other.GameMiracleInfo);
      }
      if (other.rogueBuffInfo_ != null) {
        if (rogueBuffInfo_ == null) {
          RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuff();
        }
        RogueBuffInfo.MergeFrom(other.RogueBuffInfo);
      }
      dHPEIJOKODC_.Add(other.dHPEIJOKODC_);
      if (other.RogueVersionId != 0) {
        RogueVersionId = other.RogueVersionId;
      }
      if (other.CurLayerId != 0) {
        CurLayerId = other.CurLayerId;
      }
      if (other.curLineup_ != null) {
        if (curLineup_ == null) {
          CurLineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
        }
        CurLineup.MergeFrom(other.CurLineup);
      }
      if (other.ReachedRoomCount != 0) {
        ReachedRoomCount = other.ReachedRoomCount;
      }
      if (other.FNJBGBKODFM != 0) {
        FNJBGBKODFM = other.FNJBGBKODFM;
      }
      if (other.OCGIAMMNOID != 0) {
        OCGIAMMNOID = other.OCGIAMMNOID;
      }
      if (other.ScoreId != 0) {
        ScoreId = other.ScoreId;
      }
      if (other.JIDGHOMEMBC != 0) {
        JIDGHOMEMBC = other.JIDGHOMEMBC;
      }
      if (other.pCDKHBDPDAI_ != null) {
        if (pCDKHBDPDAI_ == null) {
          PCDKHBDPDAI = new global::EggLink.DanhengServer.Proto.ItemList();
        }
        PCDKHBDPDAI.MergeFrom(other.PCDKHBDPDAI);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            dHPEIJOKODC_.AddEntriesFrom(input, _repeated_dHPEIJOKODC_codec);
            break;
          }
          case 16: {
            FinishedRoomCount = input.ReadUInt32();
            break;
          }
          case 24: {
            OCGIAMMNOID = input.ReadUInt32();
            break;
          }
          case 42: {
            if (pCDKHBDPDAI_ == null) {
              PCDKHBDPDAI = new global::EggLink.DanhengServer.Proto.ItemList();
            }
            input.ReadMessage(PCDKHBDPDAI);
            break;
          }
          case 48: {
            ReachedRoomCount = input.ReadUInt32();
            break;
          }
          case 56: {
            FinishType = (global::EggLink.DanhengServer.Proto.ChessRogueFinishType) input.ReadEnum();
            break;
          }
          case 64: {
            JPJPDCLPGKO = input.ReadUInt32();
            break;
          }
          case 72: {
            MainStoryId = input.ReadUInt32();
            break;
          }
          case 88: {
            CurLayerId = input.ReadUInt32();
            break;
          }
          case 96: {
            IsFinish = input.ReadBool();
            break;
          }
          case 106: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 114: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuff();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 122: {
            if (curLineup_ == null) {
              CurLineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
            }
            input.ReadMessage(CurLineup);
            break;
          }
          case 11034: {
            if (storyInfo_ == null) {
              StoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo();
            }
            input.ReadMessage(StoryInfo);
            break;
          }
          case 11376: {
            ScoreId = input.ReadUInt32();
            break;
          }
          case 14056: {
            JIDGHOMEMBC = input.ReadUInt32();
            break;
          }
          case 14496: {
            AreaId = input.ReadUInt32();
            break;
          }
          case 14904: {
            FNJBGBKODFM = input.ReadUInt32();
            break;
          }
          case 14936: {
            RogueVersionId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            dHPEIJOKODC_.AddEntriesFrom(ref input, _repeated_dHPEIJOKODC_codec);
            break;
          }
          case 16: {
            FinishedRoomCount = input.ReadUInt32();
            break;
          }
          case 24: {
            OCGIAMMNOID = input.ReadUInt32();
            break;
          }
          case 42: {
            if (pCDKHBDPDAI_ == null) {
              PCDKHBDPDAI = new global::EggLink.DanhengServer.Proto.ItemList();
            }
            input.ReadMessage(PCDKHBDPDAI);
            break;
          }
          case 48: {
            ReachedRoomCount = input.ReadUInt32();
            break;
          }
          case 56: {
            FinishType = (global::EggLink.DanhengServer.Proto.ChessRogueFinishType) input.ReadEnum();
            break;
          }
          case 64: {
            JPJPDCLPGKO = input.ReadUInt32();
            break;
          }
          case 72: {
            MainStoryId = input.ReadUInt32();
            break;
          }
          case 88: {
            CurLayerId = input.ReadUInt32();
            break;
          }
          case 96: {
            IsFinish = input.ReadBool();
            break;
          }
          case 106: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 114: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuff();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 122: {
            if (curLineup_ == null) {
              CurLineup = new global::EggLink.DanhengServer.Proto.LineupInfo();
            }
            input.ReadMessage(CurLineup);
            break;
          }
          case 11034: {
            if (storyInfo_ == null) {
              StoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo();
            }
            input.ReadMessage(StoryInfo);
            break;
          }
          case 11376: {
            ScoreId = input.ReadUInt32();
            break;
          }
          case 14056: {
            JIDGHOMEMBC = input.ReadUInt32();
            break;
          }
          case 14496: {
            AreaId = input.ReadUInt32();
            break;
          }
          case 14904: {
            FNJBGBKODFM = input.ReadUInt32();
            break;
          }
          case 14936: {
            RogueVersionId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
