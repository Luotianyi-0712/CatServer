// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChessRogueLevelInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChessRogueLevelInfo.proto</summary>
  public static partial class ChessRogueLevelInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ChessRogueLevelInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChessRogueLevelInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlDaGVzc1JvZ3VlTGV2ZWxJbmZvLnByb3RvGhhDaGVzc1JvZ3VlQXJlYUlu",
            "Zm8ucHJvdG8aH0NoZXNzUm9ndWVMZXZlbFN0YXR1c1R5cGUucHJvdG8iggIK",
            "E0NoZXNzUm9ndWVMZXZlbEluZm8SCgoCaWQYBCABKA0SJgoJYXJlYV9pbmZv",
            "GAUgASgLMhMuQ2hlc3NSb2d1ZUFyZWFJbmZvEhQKDGFjdGlvbl9wb2ludBgG",
            "IAEoBRITCgtDUE5BSExMTEJGQRgNIAEoDRIdChVleHBsb3JlZF9hcmVhX2lk",
            "X2xpc3QYAiADKA0SEwoLT01GT05BR0tIS0YYCyABKAUSEAoIbGF5ZXJfaWQY",
            "AyABKA0SMAoMbGV2ZWxfc3RhdHVzGAkgASgOMhouQ2hlc3NSb2d1ZUxldmVs",
            "U3RhdHVzVHlwZRIUCgxhcmVhX2lkX2xpc3QYDyADKA1CHqoCG0VnZ0xpbmsu",
            "RGFuaGVuZ1NlcnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ChessRogueAreaInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo), global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo.Parser, new[]{ "Id", "AreaInfo", "ActionPoint", "CPNAHLLLBFA", "ExploredAreaIdList", "OMFONAGKHKF", "LayerId", "LevelStatus", "AreaIdList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChessRogueLevelInfo : pb::IMessage<ChessRogueLevelInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChessRogueLevelInfo> _parser = new pb::MessageParser<ChessRogueLevelInfo>(() => new ChessRogueLevelInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChessRogueLevelInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChessRogueLevelInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueLevelInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueLevelInfo(ChessRogueLevelInfo other) : this() {
      id_ = other.id_;
      areaInfo_ = other.areaInfo_ != null ? other.areaInfo_.Clone() : null;
      actionPoint_ = other.actionPoint_;
      cPNAHLLLBFA_ = other.cPNAHLLLBFA_;
      exploredAreaIdList_ = other.exploredAreaIdList_.Clone();
      oMFONAGKHKF_ = other.oMFONAGKHKF_;
      layerId_ = other.layerId_;
      levelStatus_ = other.levelStatus_;
      areaIdList_ = other.areaIdList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueLevelInfo Clone() {
      return new ChessRogueLevelInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "area_info" field.</summary>
    public const int AreaInfoFieldNumber = 5;
    private global::EggLink.DanhengServer.Proto.ChessRogueAreaInfo areaInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueAreaInfo AreaInfo {
      get { return areaInfo_; }
      set {
        areaInfo_ = value;
      }
    }

    /// <summary>Field number for the "action_point" field.</summary>
    public const int ActionPointFieldNumber = 6;
    private int actionPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionPoint {
      get { return actionPoint_; }
      set {
        actionPoint_ = value;
      }
    }

    /// <summary>Field number for the "CPNAHLLLBFA" field.</summary>
    public const int CPNAHLLLBFAFieldNumber = 13;
    private uint cPNAHLLLBFA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CPNAHLLLBFA {
      get { return cPNAHLLLBFA_; }
      set {
        cPNAHLLLBFA_ = value;
      }
    }

    /// <summary>Field number for the "explored_area_id_list" field.</summary>
    public const int ExploredAreaIdListFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_exploredAreaIdList_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> exploredAreaIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ExploredAreaIdList {
      get { return exploredAreaIdList_; }
    }

    /// <summary>Field number for the "OMFONAGKHKF" field.</summary>
    public const int OMFONAGKHKFFieldNumber = 11;
    private int oMFONAGKHKF_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OMFONAGKHKF {
      get { return oMFONAGKHKF_; }
      set {
        oMFONAGKHKF_ = value;
      }
    }

    /// <summary>Field number for the "layer_id" field.</summary>
    public const int LayerIdFieldNumber = 3;
    private uint layerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LayerId {
      get { return layerId_; }
      set {
        layerId_ = value;
      }
    }

    /// <summary>Field number for the "level_status" field.</summary>
    public const int LevelStatusFieldNumber = 9;
    private global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusType levelStatus_ = global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusType.ChessRogueLevelIdle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusType LevelStatus {
      get { return levelStatus_; }
      set {
        levelStatus_ = value;
      }
    }

    /// <summary>Field number for the "area_id_list" field.</summary>
    public const int AreaIdListFieldNumber = 15;
    private static readonly pb::FieldCodec<uint> _repeated_areaIdList_codec
        = pb::FieldCodec.ForUInt32(122);
    private readonly pbc::RepeatedField<uint> areaIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> AreaIdList {
      get { return areaIdList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChessRogueLevelInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChessRogueLevelInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(AreaInfo, other.AreaInfo)) return false;
      if (ActionPoint != other.ActionPoint) return false;
      if (CPNAHLLLBFA != other.CPNAHLLLBFA) return false;
      if(!exploredAreaIdList_.Equals(other.exploredAreaIdList_)) return false;
      if (OMFONAGKHKF != other.OMFONAGKHKF) return false;
      if (LayerId != other.LayerId) return false;
      if (LevelStatus != other.LevelStatus) return false;
      if(!areaIdList_.Equals(other.areaIdList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (areaInfo_ != null) hash ^= AreaInfo.GetHashCode();
      if (ActionPoint != 0) hash ^= ActionPoint.GetHashCode();
      if (CPNAHLLLBFA != 0) hash ^= CPNAHLLLBFA.GetHashCode();
      hash ^= exploredAreaIdList_.GetHashCode();
      if (OMFONAGKHKF != 0) hash ^= OMFONAGKHKF.GetHashCode();
      if (LayerId != 0) hash ^= LayerId.GetHashCode();
      if (LevelStatus != global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusType.ChessRogueLevelIdle) hash ^= LevelStatus.GetHashCode();
      hash ^= areaIdList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      exploredAreaIdList_.WriteTo(output, _repeated_exploredAreaIdList_codec);
      if (LayerId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(LayerId);
      }
      if (Id != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Id);
      }
      if (areaInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AreaInfo);
      }
      if (ActionPoint != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ActionPoint);
      }
      if (LevelStatus != global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusType.ChessRogueLevelIdle) {
        output.WriteRawTag(72);
        output.WriteEnum((int) LevelStatus);
      }
      if (OMFONAGKHKF != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OMFONAGKHKF);
      }
      if (CPNAHLLLBFA != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(CPNAHLLLBFA);
      }
      areaIdList_.WriteTo(output, _repeated_areaIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      exploredAreaIdList_.WriteTo(ref output, _repeated_exploredAreaIdList_codec);
      if (LayerId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(LayerId);
      }
      if (Id != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Id);
      }
      if (areaInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AreaInfo);
      }
      if (ActionPoint != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ActionPoint);
      }
      if (LevelStatus != global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusType.ChessRogueLevelIdle) {
        output.WriteRawTag(72);
        output.WriteEnum((int) LevelStatus);
      }
      if (OMFONAGKHKF != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OMFONAGKHKF);
      }
      if (CPNAHLLLBFA != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(CPNAHLLLBFA);
      }
      areaIdList_.WriteTo(ref output, _repeated_areaIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (areaInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AreaInfo);
      }
      if (ActionPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionPoint);
      }
      if (CPNAHLLLBFA != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CPNAHLLLBFA);
      }
      size += exploredAreaIdList_.CalculateSize(_repeated_exploredAreaIdList_codec);
      if (OMFONAGKHKF != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OMFONAGKHKF);
      }
      if (LayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LayerId);
      }
      if (LevelStatus != global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusType.ChessRogueLevelIdle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LevelStatus);
      }
      size += areaIdList_.CalculateSize(_repeated_areaIdList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChessRogueLevelInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.areaInfo_ != null) {
        if (areaInfo_ == null) {
          AreaInfo = new global::EggLink.DanhengServer.Proto.ChessRogueAreaInfo();
        }
        AreaInfo.MergeFrom(other.AreaInfo);
      }
      if (other.ActionPoint != 0) {
        ActionPoint = other.ActionPoint;
      }
      if (other.CPNAHLLLBFA != 0) {
        CPNAHLLLBFA = other.CPNAHLLLBFA;
      }
      exploredAreaIdList_.Add(other.exploredAreaIdList_);
      if (other.OMFONAGKHKF != 0) {
        OMFONAGKHKF = other.OMFONAGKHKF;
      }
      if (other.LayerId != 0) {
        LayerId = other.LayerId;
      }
      if (other.LevelStatus != global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusType.ChessRogueLevelIdle) {
        LevelStatus = other.LevelStatus;
      }
      areaIdList_.Add(other.areaIdList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18:
          case 16: {
            exploredAreaIdList_.AddEntriesFrom(input, _repeated_exploredAreaIdList_codec);
            break;
          }
          case 24: {
            LayerId = input.ReadUInt32();
            break;
          }
          case 32: {
            Id = input.ReadUInt32();
            break;
          }
          case 42: {
            if (areaInfo_ == null) {
              AreaInfo = new global::EggLink.DanhengServer.Proto.ChessRogueAreaInfo();
            }
            input.ReadMessage(AreaInfo);
            break;
          }
          case 48: {
            ActionPoint = input.ReadInt32();
            break;
          }
          case 72: {
            LevelStatus = (global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusType) input.ReadEnum();
            break;
          }
          case 88: {
            OMFONAGKHKF = input.ReadInt32();
            break;
          }
          case 104: {
            CPNAHLLLBFA = input.ReadUInt32();
            break;
          }
          case 122:
          case 120: {
            areaIdList_.AddEntriesFrom(input, _repeated_areaIdList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18:
          case 16: {
            exploredAreaIdList_.AddEntriesFrom(ref input, _repeated_exploredAreaIdList_codec);
            break;
          }
          case 24: {
            LayerId = input.ReadUInt32();
            break;
          }
          case 32: {
            Id = input.ReadUInt32();
            break;
          }
          case 42: {
            if (areaInfo_ == null) {
              AreaInfo = new global::EggLink.DanhengServer.Proto.ChessRogueAreaInfo();
            }
            input.ReadMessage(AreaInfo);
            break;
          }
          case 48: {
            ActionPoint = input.ReadInt32();
            break;
          }
          case 72: {
            LevelStatus = (global::EggLink.DanhengServer.Proto.ChessRogueLevelStatusType) input.ReadEnum();
            break;
          }
          case 88: {
            OMFONAGKHKF = input.ReadInt32();
            break;
          }
          case 104: {
            CPNAHLLLBFA = input.ReadUInt32();
            break;
          }
          case 122:
          case 120: {
            areaIdList_.AddEntriesFrom(ref input, _repeated_areaIdList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
