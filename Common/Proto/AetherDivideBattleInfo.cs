// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AetherDivideBattleInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from AetherDivideBattleInfo.proto</summary>
  public static partial class AetherDivideBattleInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for AetherDivideBattleInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AetherDivideBattleInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxBZXRoZXJEaXZpZGVCYXR0bGVJbmZvLnByb3RvGhhBZXRoZXJCYXR0bGVB",
            "dmF0YXIucHJvdG8aFlNjZW5lTW9uc3RlcldhdmUucHJvdG8aEEJhdHRsZUJ1",
            "ZmYucHJvdG8i7AEKFkFldGhlckRpdmlkZUJhdHRsZUluZm8SLwoSYmF0dGxl",
            "X2F2YXRhcl9saXN0GAcgAygLMhMuQWV0aGVyQmF0dGxlQXZhdGFyEhEKCWJh",
            "dHRsZV9pZBgPIAEoDRIZChFsb2dpY19yYW5kb21fc2VlZBgOIAEoDRITCgtN",
            "T0xORk5CTEtCTBgEIAEoCBIsChFtb25zdGVyX3dhdmVfbGlzdBgNIAMoCzIR",
            "LlNjZW5lTW9uc3RlcldhdmUSEAoIc3RhZ2VfaWQYBiABKA0SHgoJYnVmZl9s",
            "aXN0GAMgAygLMgsuQmF0dGxlQnVmZkIeqgIbRWdnTGluay5EYW5oZW5nU2Vy",
            "dmVyLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.AetherBattleAvatarReflection.Descriptor, global::EggLink.DanhengServer.Proto.SceneMonsterWaveReflection.Descriptor, global::EggLink.DanhengServer.Proto.BattleBuffReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.AetherDivideBattleInfo), global::EggLink.DanhengServer.Proto.AetherDivideBattleInfo.Parser, new[]{ "BattleAvatarList", "BattleId", "LogicRandomSeed", "MOLNFNBLKBL", "MonsterWaveList", "StageId", "BuffList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AetherDivideBattleInfo : pb::IMessage<AetherDivideBattleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AetherDivideBattleInfo> _parser = new pb::MessageParser<AetherDivideBattleInfo>(() => new AetherDivideBattleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AetherDivideBattleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.AetherDivideBattleInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AetherDivideBattleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AetherDivideBattleInfo(AetherDivideBattleInfo other) : this() {
      battleAvatarList_ = other.battleAvatarList_.Clone();
      battleId_ = other.battleId_;
      logicRandomSeed_ = other.logicRandomSeed_;
      mOLNFNBLKBL_ = other.mOLNFNBLKBL_;
      monsterWaveList_ = other.monsterWaveList_.Clone();
      stageId_ = other.stageId_;
      buffList_ = other.buffList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AetherDivideBattleInfo Clone() {
      return new AetherDivideBattleInfo(this);
    }

    /// <summary>Field number for the "battle_avatar_list" field.</summary>
    public const int BattleAvatarListFieldNumber = 7;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.AetherBattleAvatar> _repeated_battleAvatarList_codec
        = pb::FieldCodec.ForMessage(58, global::EggLink.DanhengServer.Proto.AetherBattleAvatar.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AetherBattleAvatar> battleAvatarList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AetherBattleAvatar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AetherBattleAvatar> BattleAvatarList {
      get { return battleAvatarList_; }
    }

    /// <summary>Field number for the "battle_id" field.</summary>
    public const int BattleIdFieldNumber = 15;
    private uint battleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BattleId {
      get { return battleId_; }
      set {
        battleId_ = value;
      }
    }

    /// <summary>Field number for the "logic_random_seed" field.</summary>
    public const int LogicRandomSeedFieldNumber = 14;
    private uint logicRandomSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LogicRandomSeed {
      get { return logicRandomSeed_; }
      set {
        logicRandomSeed_ = value;
      }
    }

    /// <summary>Field number for the "MOLNFNBLKBL" field.</summary>
    public const int MOLNFNBLKBLFieldNumber = 4;
    private bool mOLNFNBLKBL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MOLNFNBLKBL {
      get { return mOLNFNBLKBL_; }
      set {
        mOLNFNBLKBL_ = value;
      }
    }

    /// <summary>Field number for the "monster_wave_list" field.</summary>
    public const int MonsterWaveListFieldNumber = 13;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.SceneMonsterWave> _repeated_monsterWaveList_codec
        = pb::FieldCodec.ForMessage(106, global::EggLink.DanhengServer.Proto.SceneMonsterWave.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SceneMonsterWave> monsterWaveList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SceneMonsterWave>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SceneMonsterWave> MonsterWaveList {
      get { return monsterWaveList_; }
    }

    /// <summary>Field number for the "stage_id" field.</summary>
    public const int StageIdFieldNumber = 6;
    private uint stageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "buff_list" field.</summary>
    public const int BuffListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.BattleBuff> _repeated_buffList_codec
        = pb::FieldCodec.ForMessage(26, global::EggLink.DanhengServer.Proto.BattleBuff.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleBuff> buffList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleBuff> BuffList {
      get { return buffList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AetherDivideBattleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AetherDivideBattleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!battleAvatarList_.Equals(other.battleAvatarList_)) return false;
      if (BattleId != other.BattleId) return false;
      if (LogicRandomSeed != other.LogicRandomSeed) return false;
      if (MOLNFNBLKBL != other.MOLNFNBLKBL) return false;
      if(!monsterWaveList_.Equals(other.monsterWaveList_)) return false;
      if (StageId != other.StageId) return false;
      if(!buffList_.Equals(other.buffList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= battleAvatarList_.GetHashCode();
      if (BattleId != 0) hash ^= BattleId.GetHashCode();
      if (LogicRandomSeed != 0) hash ^= LogicRandomSeed.GetHashCode();
      if (MOLNFNBLKBL != false) hash ^= MOLNFNBLKBL.GetHashCode();
      hash ^= monsterWaveList_.GetHashCode();
      if (StageId != 0) hash ^= StageId.GetHashCode();
      hash ^= buffList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      buffList_.WriteTo(output, _repeated_buffList_codec);
      if (MOLNFNBLKBL != false) {
        output.WriteRawTag(32);
        output.WriteBool(MOLNFNBLKBL);
      }
      if (StageId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(StageId);
      }
      battleAvatarList_.WriteTo(output, _repeated_battleAvatarList_codec);
      monsterWaveList_.WriteTo(output, _repeated_monsterWaveList_codec);
      if (LogicRandomSeed != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(LogicRandomSeed);
      }
      if (BattleId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(BattleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      buffList_.WriteTo(ref output, _repeated_buffList_codec);
      if (MOLNFNBLKBL != false) {
        output.WriteRawTag(32);
        output.WriteBool(MOLNFNBLKBL);
      }
      if (StageId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(StageId);
      }
      battleAvatarList_.WriteTo(ref output, _repeated_battleAvatarList_codec);
      monsterWaveList_.WriteTo(ref output, _repeated_monsterWaveList_codec);
      if (LogicRandomSeed != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(LogicRandomSeed);
      }
      if (BattleId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(BattleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += battleAvatarList_.CalculateSize(_repeated_battleAvatarList_codec);
      if (BattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BattleId);
      }
      if (LogicRandomSeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LogicRandomSeed);
      }
      if (MOLNFNBLKBL != false) {
        size += 1 + 1;
      }
      size += monsterWaveList_.CalculateSize(_repeated_monsterWaveList_codec);
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageId);
      }
      size += buffList_.CalculateSize(_repeated_buffList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AetherDivideBattleInfo other) {
      if (other == null) {
        return;
      }
      battleAvatarList_.Add(other.battleAvatarList_);
      if (other.BattleId != 0) {
        BattleId = other.BattleId;
      }
      if (other.LogicRandomSeed != 0) {
        LogicRandomSeed = other.LogicRandomSeed;
      }
      if (other.MOLNFNBLKBL != false) {
        MOLNFNBLKBL = other.MOLNFNBLKBL;
      }
      monsterWaveList_.Add(other.monsterWaveList_);
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      buffList_.Add(other.buffList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            buffList_.AddEntriesFrom(input, _repeated_buffList_codec);
            break;
          }
          case 32: {
            MOLNFNBLKBL = input.ReadBool();
            break;
          }
          case 48: {
            StageId = input.ReadUInt32();
            break;
          }
          case 58: {
            battleAvatarList_.AddEntriesFrom(input, _repeated_battleAvatarList_codec);
            break;
          }
          case 106: {
            monsterWaveList_.AddEntriesFrom(input, _repeated_monsterWaveList_codec);
            break;
          }
          case 112: {
            LogicRandomSeed = input.ReadUInt32();
            break;
          }
          case 120: {
            BattleId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            buffList_.AddEntriesFrom(ref input, _repeated_buffList_codec);
            break;
          }
          case 32: {
            MOLNFNBLKBL = input.ReadBool();
            break;
          }
          case 48: {
            StageId = input.ReadUInt32();
            break;
          }
          case 58: {
            battleAvatarList_.AddEntriesFrom(ref input, _repeated_battleAvatarList_codec);
            break;
          }
          case 106: {
            monsterWaveList_.AddEntriesFrom(ref input, _repeated_monsterWaveList_codec);
            break;
          }
          case 112: {
            LogicRandomSeed = input.ReadUInt32();
            break;
          }
          case 120: {
            BattleId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
